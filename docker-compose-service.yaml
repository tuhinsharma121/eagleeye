version: '3.9'
services:
  zookeeper:
    image: zookeeper:3.7.0
    hostname: zookeeper
    networks:
      - eagleeye-nw
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zookeeper:2888:3888;2181
    volumes:
      - ./eagleeye-conf/zookeeper/data:/data
      - ./eagleeye-conf/zookeeper/datalog:/datalog
    healthcheck:
      test: [ "CMD-SHELL", "echo ruok | nc -w 2 zookeeper 4444" ]
      interval: 5s
      timeout: 10s
      retries: 3
  zkui:
    image: qnib/plain-zkui:latest
    hostname: zkui
    networks:
      - eagleeye-nw
    ports:
      - "9090:9090"
    environment:
      ZK_SERVER: "zookeeper:2181"
    depends_on:
      - zookeeper
  kafka:
    image: wurstmeister/kafka:2.13-2.7.0
    hostname: kafka
    networks:
      - eagleeye-nw
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 0
      KAFKA_ADVERTISED_HOST_NAME: "kafka"
      KAFKA_CREATE_TOPICS: "networkeventtopic:1:1,ipprofiletopic:1:1"
    volumes:
      - ./eagleeye-conf/kafka/data:/var/lib/kafka/data
    depends_on:
      - zookeeper
    healthcheck:
      test: [ "CMD", "kafka-topics.sh", "--list", "--zookeeper", "zookeeper:2181" ]
      interval: 30s
      timeout: 10s
      retries: 4
  kafdrop:
    image: obsidiandynamics/kafdrop:3.27.0
    hostname: kafdrop
    networks:
      - eagleeye-nw
    ports:
      - "9999:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
    depends_on:
      - zookeeper
      - kafka
  pinot-controller:
    hostname: pinot-controller
    build:
      context: ""
      dockerfile: eagleeye-profiler/dockerfile/pinot_controller.dockerfile
    image: pinot_controller:latest
    entrypoint:
      - /bin/entrypoint.sh
    networks:
      - eagleeye-nw
    volumes:
      - ./eagleeye-conf/pinot/controller:/tmp/data/controller
    ports:
      - "9000:9000"
    depends_on:
      - kafka
  pinot-broker:
    hostname: pinot-broker
    build:
      context: ""
      dockerfile: eagleeye-profiler/dockerfile/pinot_broker.dockerfile
    image: pinot_broker:latest
    entrypoint:
      - /bin/entrypoint.sh
    networks:
      - eagleeye-nw
    ports:
      - "8099:8099"
    depends_on:
      - zookeeper
      - kafka
      - pinot-controller
  pinot-server:
    hostname: pinot-server
    build:
      context: ""
      dockerfile: eagleeye-profiler/dockerfile/pinot_server.dockerfile
    image: pinot_server:latest
    entrypoint:
      - /bin/entrypoint.sh
    networks:
      - eagleeye-nw
    volumes:
      - ./eagleeye-conf/pinot/server:/tmp/data/server
    ports:
      - "8098:8098"
    depends_on:
      - zookeeper
      - kafka
      - pinot-controller
  superset:
    build:
      context: ""
      dockerfile: eagleeye-profiler/dockerfile/superset.dockerfile
    networks:
      - eagleeye-nw
    ports:
      - "8088:8088"
  jobmanager:
    image: flink:1.13.1-scala_2.12-java8
    networks:
      - eagleeye-nw
    command: "jobmanager.sh start-foreground"
    ports:
      - 8081:8081
    volumes:
      - ./eagleeye-profiler/deployment_config/flink/conf:/opt/flink/conf
      - /tmp/flink-checkpoints-directory:/tmp/flink-checkpoints-directory
      - /tmp/flink-savepoints-directory:/tmp/flink-savepoints-directory
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
  taskmanager:
    image: flink:1.13.1-scala_2.12-java8
    networks:
      - eagleeye-nw
    depends_on:
      - jobmanager
    command: "taskmanager.sh start-foreground"
    volumes:
      - ./eagleeye-profiler/deployment_config/flink/conf:/opt/flink/conf
      - /tmp/flink-checkpoints-directory:/tmp/flink-checkpoints-directory
      - /tmp/flink-savepoints-directory:/tmp/flink-savepoints-directory
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager


networks:
  eagleeye-nw:
    driver: bridge
    name: eagleeye-nw
